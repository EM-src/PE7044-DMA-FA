SET VERIFY ON

Rem	Setup File for DDL, DMA FINAL ASSIGNMENT PART1

SET ECHO ON

SET SQLBLANKLINES ON

CREATE TABLE AGENT (
    AGENT_ID            NUMBER(3)  NOT NULL
      CHECK (AGENT_ID > 0)
      CONSTRAINT PK_AGENT PRIMARY KEY,
    HEADQUARTER         VARCHAR(25),
    FULL_NAME           VARCHAR(50) NOT NULL
      CONSTRAINT AGENT_UNIQUE_FN UNIQUE,
    ADDRESS             VARCHAR(100),
    WEBSITE             VARCHAR(50),
    CONTACT_DETAILS     NUMBER(14)  NOT NULL
      CONSTRAINT AGENT_UNIQUE_CD UNIQUE
  );

  CREATE TABLE BRANCH (
    BRANCH_ID           NUMBER(3)  NOT NULL
      CHECK (BRANCH_ID > 0)
      CONSTRAINT PK_BRANCH PRIMARY KEY,
    AGENT_ID            NUMBER(3)  NOT NULL
      CHECK (AGENT_ID > 0),
    ADDRESS             VARCHAR(100),
    CONTACT_DETAILS     NUMBER(14)  NOT NULL
      CONSTRAINT BRANCH_UNIQUE_CD UNIQUE,
    MANAGER_ID          NUMBER(3)  NOT NULL
      CONSTRAINT BRANCH_UNIQUE_MNGR UNIQUE,
    CONSTRAINT FK_BRANCH FOREIGN KEY (AGENT_ID) REFERENCES AGENT (AGENT_ID)
  );

  CREATE TABLE STAFF (
    STAFF_ID            NUMBER(3) NOT NULL
      CHECK (STAFF_ID > 0)
      CONSTRAINT PK_STAFF PRIMARY KEY,
    AGENT_ID            NUMBER(3)  NOT NULL
      CHECK (AGENT_ID > 0),
    FULL_NAME           VARCHAR(50) NOT NULL,
    ADDRESS             VARCHAR(100),
    CONTACT_DETAILS     NUMBER(14)  NOT NULL
      CONSTRAINT STAFF_UNIQUE_CD UNIQUE,
    PERSONAL_DETAILS    CHAR(1)
      CONSTRAINT STAFF_PERS_DETAILS CHECK (PERSONAL_DETAILS IN ('S', 'M', 'W', 'D')),
    CONSTRAINT FK_STAFF FOREIGN KEY (AGENT_ID) REFERENCES AGENT (AGENT_ID)
  );

  CREATE TABLE CUSTOMER (
    CUSTOMER_ID         NUMBER(3) NOT NULL
      CHECK (CUSTOMER_ID > 0)
      CONSTRAINT PK_CUSTOMER PRIMARY KEY,
    AGENT_ID            NUMBER(3)  NOT NULL
      CHECK (AGENT_ID > 0),
    FULL_NAME           VARCHAR(50) NOT NULL,
    ADDRESS             VARCHAR(100),
    DOB                 DATE,
      CONSTRAINT CUST_OVER_18_YO CHECK (TO_DATE (DOB, 'DD-MON-YYYY') > '01-JAN-2004'),
    GENDER              CHAR(1)
      CONSTRAINT CUST_GENDER CHECK (GENDER IN ('M', 'F')),
    CONTACT_DETAILS     NUMBER(14)  NOT NULL
      CONSTRAINT CUST_UNIQUE_CD UNIQUE,
    CONSTRAINT FK_CUSTOMER FOREIGN KEY (AGENT_ID) REFERENCES AGENT (AGENT_ID)
  );

  CREATE TABLE CUSTOMER_INTENTION (
    CUSTOMER_ID         NUMBER(3) NOT NULL
      CHECK (CUSTOMER_ID > 0)
      CONSTRAINT PK_CUST_INENT PRIMARY KEY,
    PURPOSE             CHAR(1) NOT NULL
      CONSTRAINT PURPOSE_CHK CHECK (PURPOSE IN ('BUY', 'RENT', 'SELL')),
    CONSTRAINT FK_CUST_INTENT FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID)
  );

  CREATE TABLE PROPERTY (
    PROPERTY_ID         NUMBER(3) NOT NULL
      CHECK (PROPERTY_ID > 0)
      CONSTRAINT PK_PROP PRIMARY KEY,
    CUSTOMER_ID         NUMBER(3) NOT NULL
      CHECK (CUSTOMER_ID > 0),
    BRANCH_ID           NUMBER(3)  NOT NULL
      CHECK (BRANCH_ID > 0),
    REGISTRATION_DATE   DATE,
    ADDRESS             VARCHAR(100) NOT NULL,
    LOCATION            VARCHAR(25) NOT NULL,
    DESCRIPTION         VARCHAR(300),
    ACCOM_DETAILS       VARCHAR(300) NOT NULL,
    TYPE                CHAR(2) NOT NULL
      CONSTRAINT TYPE_CHK CHECK (TYPE IN ('DETACHED', 'SEMI DETACHED', 'APARTMENT', 'CONDO')),
    ROOMS               NUMBER(2) NOT NULL
      CHECK (ROOMS > 0),
    CONSTRAINT FK1_PROP FOREIGN KEY (CUSTOMER_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
    CONSTRAINT FK2_PROP FOREIGN KEY (BRANCH_ID) REFERENCES BRANCH (BRANCH_ID)
  );

  CREATE TABLE PROPERTY_SOLD (
    BUYER_ID            NUMBER(3) NOT NULL
      CHECK (BUYER_ID > 0),
    PROPERTY_ID         NUMBER(3) NOT NULL
      CHECK (PROPERTY_ID > 0),
    SELLING_PRICE       NUMBER(9,2) NOT NULL
      CONSTRAINT SP_POS CHECK (SELLING_PRICE > 0),
    STAMP_DUTY          NUMBER(6,2) NOT NULL
      CONSTRAINT SD_POS CHECK (STAMP_DUTY > 0),
    COMMISSION          NUMBER(6,2) NOT NULL
      CONSTRAINT COMM_POS CHECK (COMMISSION > 0),
    TRANSACTION_DATE    DATE NOT NULL, --POSSIBLE CHECK TRANSACTION DATE >= REGISTRATION_DATE
    CONSTRAINT PK_PROP_SOLD PRIMARY KEY (BUYER_ID, PROPERTY_ID),
    CONSTRAINT FK1_PROP_SOLD FOREIGN KEY (BUYER_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
    CONSTRAINT FK2_PROP_SOLD FOREIGN KEY (PROPERTY_ID) REFERENCES PROPERTY (PROPERTY_ID)
  );

  CREATE TABLE PROPERTY_RENTED (
    TENANT_ID            NUMBER(3) NOT NULL
      CHECK (TENANT_ID > 0),
    PROPERTY_ID         NUMBER(3) NOT NULL
      CHECK (PROPERTY_ID > 0),
    LANDLORD_ID         NUMBER(3) NOT NULL
      CHECK (LANDLORD_ID > 0),
    RENT_PER_MONTH      NUMBER(6,2) NOT NULL
      CHECK (RENT_PER_MONTH > 0),
    DEPOSIT             NUMBER(7,2)
      CHECK (DEPOSIT > 0),
    COMMISSION          NUMBER(7,2)
      CHECK (COMMISSION > 0),
    START_DATE          DATE,
    END_DATE            DATE,
      CONSTRAINT DURATION CHECK (TO_DATE (START_DATE, 'DD-MON-YYYY') <
                               TO_DATE (END_DATE, 'DD-MON-YYYY')),
    SCHEME              VARCHAR(50),
    CONSTRAINT PK_PROP_RENT PRIMARY KEY (TENANT_ID, PROPERTY_ID),
    CONSTRAINT FK1_PROP_RENT FOREIGN KEY (TENANT_ID) REFERENCES CUSTOMER (CUSTOMER_ID),
    CONSTRAINT FK2_PROP_RENT FOREIGN KEY (PROPERTY_ID) REFERENCES PROPERTY (PROPERTY_ID),
    CONSTRAINT FK3_PROP_RENT FOREIGN KEY (LANDLORD_ID) REFERENCES CUSTOMER (CUSTOMER_ID)
  );

  CREATE TABLE VIEWINGS (
    PROPERTY_ID         NUMBER(3) NOT NULL
      CHECK (PROPERTY_ID > 0)
      CONSTRAINT FK1_VIEW REFERENCES CUSTOMER,
    CUSTOMER_ID         NUMBER(3) NOT NULL
      CHECK (CUSTOMER_ID > 0)
      CONSTRAINT FK2_VIEW REFERENCES CUSTOMER,
    DATE_TIME           TIMESTAMP
      CONSTRAINT WORKING_HOURS CHECK (EXTRACT(HOUR FROM DATE_TIME) > 9 AND EXTRACT(HOUR FROM DATE_TIME) < 17),
    CUST_COMMENTS       VARCHAR(500),
    CONSTRAINT PK_VIEW PRIMARY KEY (PROPERTY_ID, DATE_TIME)
  );
